/* Explore Task Card Styles */
.taskCard {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: white;
  border: 1px solid rgba(0, 0, 0, 0.08);
  border-radius: 1rem;
  padding: 1.5rem;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  margin-bottom: 0;
  width: 100%;
  box-sizing: border-box;
  position: relative;
  transform-origin: center bottom;
}

.taskCard:hover {
  box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15);
  transform: translateY(-4px) scale(1.02);
  border-color: rgba(16, 185, 129, 0.3);
  background: linear-gradient(135deg, rgba(255, 255, 255, 1) 0%, rgba(240, 253, 244, 0.5) 100%);
}

.taskCardInactive {
  opacity: 0.6;
  background: rgba(249, 250, 251, 0.8);
}

.taskCardInactive:hover {
  transform: none;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  border-color: rgba(0, 0, 0, 0.08);
}

/* Left Section: Task Info */
.taskInfo {
  display: flex;
  align-items: center;
  gap: 1.25rem;
  flex: 1;
  min-width: 0;
  overflow: hidden;
}

.logoSection {
  position: relative;
  flex-shrink: 0;
}

.logo {
  width: 4rem;
  height: 4rem;
  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
  border: 1px solid rgba(59, 130, 246, 0.1);
  border-radius: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.75rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
}

.statusIndicator {
  position: absolute;
  top: -0.25rem;
  right: -0.25rem;
  background: white;
  border-radius: 50%;
  padding: 0.125rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.statusIcon {
  width: 0.75rem;
  height: 0.75rem;
}

.statusActive {
  color: rgb(34, 197, 94);
  fill: rgb(34, 197, 94);
}

.statusInactive {
  color: rgb(156, 163, 175);
  fill: none;
}

.taskDetails {
  flex: 1;
  min-width: 0;
}

.taskHeader {
  margin-bottom: 0.5rem;
}

.taskName {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--color-foreground);
  margin: 0 0 0.25rem 0;
  line-height: 1.4;
}

.taskMeta {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
}

.protocol {
  font-weight: 500;
  color: #3b82f6;
  background: rgba(59, 130, 246, 0.1);
  padding: 0.125rem 0.5rem;
  border-radius: 0.375rem;
}

.separator {
  color: var(--color-muted-foreground);
}

.category {
  color: var(--color-muted-foreground);
  text-transform: capitalize;
}

.taskDescription {
  color: var(--color-muted-foreground);
  font-size: 0.875rem;
  line-height: 1.5;
  margin: 0;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Right Section: Actions */
.taskActions {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-shrink: 0;
  min-width: 0;
}

.pointsSection {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.pointsBadge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
  border: 1px solid #f59e0b;
  border-radius: 0.75rem;
  padding: 0.5rem 0.75rem;
  box-shadow: 0 2px 4px rgba(245, 158, 11, 0.1);
}

.pointsIcon {
  width: 1rem;
  height: 1rem;
  color: #d97706;
  fill: #d97706;
}

.pointsValue {
  font-size: 0.875rem;
  font-weight: 600;
  color: #92400e;
}

.addButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  font-weight: 500;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border: none;
  cursor: pointer;
  background: #3b82f6;
  color: white;
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
  min-width: 120px;
  position: relative;
  overflow: hidden;
}

.addButton:hover:not(:disabled) {
  background: rgba(59, 130, 246, 0.9);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
}

.addButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.1);
}

.addButtonAdded {
  background: white;
  color: rgb(34, 197, 94);
  border: 1px solid rgb(34, 197, 94);
  box-shadow: 0 2px 8px rgba(34, 197, 94, 0.1);
}

.addButtonAdded:hover:not(:disabled) {
  background: rgb(240, 253, 244);
  transform: none;
  box-shadow: 0 2px 8px rgba(34, 197, 94, 0.2);
}

.buttonIcon {
  width: 1rem;
  height: 1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
  .taskCard {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
    padding: 1rem;
  }

  .taskInfo {
    gap: 0.875rem;
  }

  .logo {
    width: 3rem;
    height: 3rem;
    font-size: 1.375rem;
    border-radius: 0.75rem;
  }

  .statusIndicator {
    top: -0.1875rem;
    right: -0.1875rem;
  }

  .taskMeta {
    flex-wrap: wrap;
    gap: 0.375rem;
    margin-bottom: 0.25rem;
  }

  .protocol {
    padding: 0.125rem 0.375rem;
    font-size: 0.75rem;
    border-radius: 0.25rem;
  }

  .category {
    font-size: 0.75rem;
  }

  .taskDescription {
    -webkit-line-clamp: 3;
    font-size: 0.8125rem;
    margin-top: 0.375rem;
    line-height: 1.4;
  }

  .taskActions {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.875rem;
  }

  .pointsBadge {
    padding: 0.375rem 0.5rem;
    gap: 0.25rem;
  }

  .pointsIcon {
    width: 0.875rem;
    height: 0.875rem;
  }

  .pointsValue {
    font-size: 0.75rem;
  }

  .addButton {
    flex: 1;
    justify-content: center;
    padding: 0.75rem 1rem;
    max-width: 180px;
    min-width: 100px;
    font-size: 0.8125rem;
  }

  .buttonIcon {
    width: 0.875rem;
    height: 0.875rem;
  }
}

@media (max-width: 640px) {
  .taskCard {
    padding: 0.875rem;
    gap: 0.875rem;
    border-radius: 0.875rem;
  }

  .taskInfo {
    gap: 0.75rem;
  }

  .taskDetails {
    min-width: 0;
    overflow: hidden;
  }

  .taskName {
    font-size: 0.9375rem;
    line-height: 1.3;
    word-break: break-word;
    margin-bottom: 0.1875rem;
  }

  .taskMeta {
    gap: 0.25rem;
    margin-bottom: 0.1875rem;
  }

  .separator {
    display: none;
  }

  .protocol {
    font-size: 0.6875rem;
    padding: 0.0625rem 0.3125rem;
  }

  .category {
    font-size: 0.6875rem;
  }

  .taskDescription {
    font-size: 0.75rem;
    line-height: 1.3;
    margin-top: 0.25rem;
    -webkit-line-clamp: 2;
  }

  .taskActions {
    gap: 0.75rem;
  }

  .pointsBadge {
    padding: 0.3125rem 0.4375rem;
    gap: 0.1875rem;
    border-radius: 0.5rem;
  }

  .pointsIcon {
    width: 0.75rem;
    height: 0.75rem;
  }

  .pointsValue {
    font-size: 0.6875rem;
  }

  .addButton {
    padding: 0.625rem 0.875rem;
    font-size: 0.75rem;
    border-radius: 0.625rem;
    max-width: 160px;
    min-width: 90px;
  }

  .buttonIcon {
    width: 0.75rem;
    height: 0.75rem;
  }
}

@media (max-width: 480px) {
  .taskCard {
    padding: 0.75rem;
    gap: 0.75rem;
    border-radius: 0.75rem;
  }

  .taskInfo {
    gap: 0.625rem;
  }

  .logo {
    width: 2.25rem;
    height: 2.25rem;
    font-size: 1.125rem;
    border-radius: 0.625rem;
  }

  .statusIndicator {
    top: -0.0625rem;
    right: -0.0625rem;
  }

  .statusIcon {
    width: 0.5rem;
    height: 0.5rem;
  }

  .taskName {
    font-size: 0.875rem;
    margin-bottom: 0.125rem;
    line-height: 1.2;
  }

  .taskMeta {
    margin-bottom: 0.1875rem;
    gap: 0.1875rem;
  }

  .protocol {
    padding: 0.0625rem 0.25rem;
    font-size: 0.625rem;
    border-radius: 0.1875rem;
  }

  .category {
    font-size: 0.625rem;
  }

  .taskDescription {
    font-size: 0.6875rem;
    line-height: 1.2;
    margin-top: 0.1875rem;
    -webkit-line-clamp: 2;
  }

  .taskActions {
    flex-direction: column;
    gap: 0.625rem;
    align-items: center;
  }

  .pointsSection {
    align-self: center;
  }

  .pointsBadge {
    padding: 0.1875rem 0.375rem;
    gap: 0.125rem;
    border-radius: 0.375rem;
  }

  .pointsIcon {
    width: 0.625rem;
    height: 0.625rem;
  }

  .pointsValue {
    font-size: 0.625rem;
    font-weight: 500;
  }

  .addButton {
    padding: 0.625rem;
    font-size: 0.75rem;
    max-width: none;
    min-width: 85px;
    border-radius: 0.5rem;
  }

  .buttonIcon {
    width: 0.75rem;
    height: 0.75rem;
  }
}

/* Extra small screens (iPhone SE, etc.) */
@media (max-width: 375px) {
  .taskCard {
    padding: 0.625rem;
    gap: 0.625rem;
    border-radius: 0.625rem;
  }

  .taskInfo {
    gap: 0.5rem;
  }

  .logo {
    width: 2rem;
    height: 2rem;
    font-size: 1rem;
    border-radius: 0.5rem;
  }

  .statusIndicator {
    top: 0;
    right: 0;
    padding: 0.0625rem;
  }

  .statusIcon {
    width: 0.4375rem;
    height: 0.4375rem;
  }

  .taskName {
    font-size: 0.8125rem;
    line-height: 1.1;
    margin-bottom: 0.0625rem;
  }

  .taskMeta {
    gap: 0.125rem;
    margin-bottom: 0.125rem;
  }

  .protocol {
    font-size: 0.5625rem;
    padding: 0.0625rem 0.1875rem;
  }

  .category {
    font-size: 0.5625rem;
  }

  .taskDescription {
    font-size: 0.625rem;
    line-height: 1.1;
    margin-top: 0.125rem;
  }

  .pointsBadge {
    padding: 0.125rem 0.25rem;
    gap: 0.0625rem;
    border-radius: 0.25rem;
  }

  .pointsIcon {
    width: 0.5rem;
    height: 0.5rem;
  }

  .pointsValue {
    font-size: 0.5625rem;
  }

  .addButton {
    padding: 0.5rem;
    font-size: 0.6875rem;
    border-radius: 0.375rem;
    gap: 0.25rem;
    min-width: 80px;
  }

  .buttonIcon {
    width: 0.625rem;
    height: 0.625rem;
  }
}

/* Enhanced success feedback animation */
@keyframes addSuccess {
  0% {
    transform: scale(1);
    background: #3b82f6;
  }
  25% {
    transform: scale(1.05);
    background: #10b981;
  }
  50% {
    transform: scale(1.1);
    background: #059669;
  }
  75% {
    transform: scale(1.05);
    background: #10b981;
  }
  100% {
    transform: scale(1);
    background: #10b981;
  }
}

.addButtonAdded {
  animation: addSuccess 0.6s ease-out;
  background: #10b981 !important;
  color: white !important;
  border: 1px solid #10b981 !important;
}

/* Tinder 스타일 오른쪽 스와이프 (Like) - 더 천천히, 더 드라마틱하게 */
@keyframes tinderSwipeRight {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg) scale(1);
    opacity: 1;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }
  5% {
    transform: translateX(5px) translateY(0) rotate(1deg) scale(1.02);
    opacity: 1;
    box-shadow: 0 8px 30px rgba(16, 185, 129, 0.2);
  }
  15% {
    transform: translateX(20px) translateY(-3px) rotate(3deg) scale(1.05);
    opacity: 1;
    box-shadow: 0 12px 40px rgba(16, 185, 129, 0.4);
  }
  25% {
    transform: translateX(40px) translateY(-8px) rotate(5deg) scale(1.03);
    opacity: 0.98;
    box-shadow: 0 10px 35px rgba(16, 185, 129, 0.35);
  }
  40% {
    transform: translateX(80px) translateY(-15px) rotate(8deg) scale(1);
    opacity: 0.92;
    box-shadow: 0 8px 30px rgba(16, 185, 129, 0.3);
  }
  55% {
    transform: translateX(140px) translateY(-25px) rotate(12deg) scale(0.95);
    opacity: 0.8;
  }
  70% {
    transform: translateX(220px) translateY(-40px) rotate(18deg) scale(0.88);
    opacity: 0.6;
  }
  80% {
    transform: translateX(320px) translateY(-60px) rotate(25deg) scale(0.8);
    opacity: 0.4;
  }
  90% {
    transform: translateX(450px) translateY(-85px) rotate(35deg) scale(0.7);
    opacity: 0.2;
  }
  95% {
    transform: translateX(580px) translateY(-110px) rotate(40deg) scale(0.6);
    opacity: 0.05;
  }
  100% {
    transform: translateX(700px) translateY(-130px) rotate(45deg) scale(0.5);
    opacity: 0;
    box-shadow: none;
  }
}

@keyframes fadeOutWithSlide {
  0% {
    transform: translateX(0) rotateY(0deg);
    opacity: 1;
    filter: blur(0px);
  }
  25% {
    transform: translateX(20px) rotateY(-5deg);
    opacity: 0.8;
    filter: blur(0.5px);
  }
  50% {
    transform: translateX(60px) rotateY(-10deg);
    opacity: 0.5;
    filter: blur(1px);
  }
  75% {
    transform: translateX(120px) rotateY(-15deg);
    opacity: 0.2;
    filter: blur(2px);
  }
  100% {
    transform: translateX(100%) rotateY(-20deg);
    opacity: 0;
    filter: blur(3px);
  }
}

.taskCardAnimating {
  animation: tinderSwipeRight 2.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  animation-fill-mode: forwards;
  z-index: 1000;
  position: relative;
  overflow: visible;
  transform-origin: center center;
  will-change: transform, opacity, filter;
  pointer-events: none; /* Prevent interactions during animation */
}

.taskCardAnimating::after {
  content: 'ADDED';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(15deg) scale(0);
  font-size: 2.5rem;
  font-weight: 900;
  color: #10b981;
  text-shadow: 0 0 20px rgba(16, 185, 129, 0.5);
  border: 4px solid #10b981;
  padding: 1rem 2rem;
  border-radius: 1rem;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  animation: tinderLikeBadge 2.2s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
  will-change: transform, opacity;
  z-index: 10;
}

/* Tinder 스타일 LIKE 배지 애니메이션 - 더 천천히, 더 오래 보이게 */
@keyframes tinderLikeBadge {
  0% {
    transform: translate(-50%, -50%) rotate(15deg) scale(0);
    opacity: 0;
  }
  15% {
    transform: translate(-50%, -50%) rotate(15deg) scale(1.3);
    opacity: 1;
  }
  25% {
    transform: translate(-50%, -50%) rotate(15deg) scale(1.1);
    opacity: 1;
  }
  35% {
    transform: translate(-50%, -50%) rotate(15deg) scale(1);
    opacity: 1;
  }
  60% {
    transform: translate(-50%, -50%) rotate(15deg) scale(1);
    opacity: 1;
  }
  75% {
    transform: translate(-50%, -50%) rotate(15deg) scale(1.05);
    opacity: 0.9;
  }
  85% {
    transform: translate(-50%, -50%) rotate(15deg) scale(1);
    opacity: 0.7;
  }
  95% {
    transform: translate(-50%, -50%) rotate(15deg) scale(0.95);
    opacity: 0.3;
  }
  100% {
    transform: translate(-50%, -50%) rotate(15deg) scale(0.9);
    opacity: 0;
  }
}

/* Fallback simple animation */
.taskCardAnimating.simple {
  animation: simpleSwipeOut 0.8s ease-out forwards;
}

@keyframes simpleSwipeOut {
  0% {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
  20% {
    transform: translateX(0) scale(1.05);
    opacity: 1;
  }
  100% {
    transform: translateX(100%) scale(0.8);
    opacity: 0;
  }
}

/* Alternative animation style for variety */
.taskCardAnimating.altStyle {
  animation: fadeOutWithSlide 0.7s ease-out forwards;
}

/* Button click animation with ripple effect */
@keyframes buttonClickRipple {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

.addButton:active {
  animation: buttonClickRipple 0.2s ease;
}

/* Adding ripple effect */
.addButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
  z-index: 0;
}

.addButton:active::before {
  width: 300px;
  height: 300px;
}

.addButton > * {
  position: relative;
  z-index: 1;
}

/* Stagger animation delays for multiple tasks */
.taskCardAnimating:nth-child(1) {
  animation-delay: 0s;
}

.taskCardAnimating:nth-child(2) {
  animation-delay: 0.1s;
}

.taskCardAnimating:nth-child(3) {
  animation-delay: 0.2s;
}

.taskCardAnimating:nth-child(4) {
  animation-delay: 0.3s;
}

.taskCardAnimating:nth-child(n+5) {
  animation-delay: 0.4s;
}

/* Enhanced success feedback animation on card addition */
@keyframes successGlow {
  0% {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    border-color: rgba(0, 0, 0, 0.08);
    background: white;
  }
  25% {
    box-shadow: 0 8px 32px rgba(16, 185, 129, 0.3);
    border-color: rgba(16, 185, 129, 0.4);
    background: rgba(240, 253, 244, 0.8);
  }
  50% {
    box-shadow: 0 12px 40px rgba(16, 185, 129, 0.4);
    border-color: rgba(16, 185, 129, 0.6);
    background: rgba(240, 253, 244, 1);
    transform: scale(1.02);
  }
  75% {
    box-shadow: 0 8px 32px rgba(16, 185, 129, 0.3);
    border-color: rgba(16, 185, 129, 0.4);
    background: rgba(240, 253, 244, 0.8);
    transform: scale(1.01);
  }
  100% {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    border-color: rgba(0, 0, 0, 0.08);
    background: white;
    transform: scale(1);
  }
}

/* Add success state before animation starts */
.taskCard.success {
  animation: successGlow 0.8s ease-in-out;
}

/* Reduce animations for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  .taskCardAnimating,
  .taskCardAnimating::after {
    animation: none !important;
    transition: opacity 0.2s ease !important;
  }

  .taskCard.success {
    animation: none !important;
  }

  .addButton {
    animation: none !important;
  }

  .addButton::before {
    display: none;
  }
}